<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.druid.mapper.EmployeeMapper">
    <!--
    开启mybatis的第三方缓存 redis,
    调用自己的新建的RedisCache类 com.example.druid.config.RedisCache
    FIFO 缓存: 先进先出，按对象进入缓存的顺序来移除它们,
    flushInterval:miniSeconds default没有刷新时间间隔，仅在调用语句时刷新 flushInterval="6000"
    并每隔 60 秒刷新,存数结果对象或列表的 1024 个引用,
    而且返回的对象被认为是只读的,

    Redis中的存储
    Redis会自动的将Sql+条件+Hash等当做key值，而将查询结果作为value，
    只要请求中的所有参数都符合，
    那么就会使用redis中的二级缓存。
    -->
    <cache type="com.example.druid.config.RedisCache"
           eviction="FIFO"
           size="1024"
           readOnly="false"/>

    <!--
     useCache="true"
     select的时候使用缓存
   -->
    <select id="getEmpById" useCache="true" flushCache="false" resultType="com.example.druid.bean.Employee">
     SELECT id,lastName,password,email,departmentId,perms FROM employee where id = #{id}
  </select>


    <select id="getEmpByName" useCache="true" flushCache="false" resultType="com.example.druid.bean.Employee">
        SELECT id,lastName,password,email,departmentId,perms FROM employee
        WHERE lastName = #{lastName}
    </select>

    <!-- 订单查询关联用户的resultMap
        将整个查询的结果映射到com.example.druid.bean.Employee中
        column:数据库中的字段 如 last_name
        property:实体类中 字段的定义
         -->
    <resultMap id="getEmpLikeNameResultMap"
               type="com.example.druid.bean.Employee">
        <id column="id" property="id"></id>
        <result column="lastName" property="lastName"></result>
        <result column="email"    property="email"></result>
        <result column="departmentId" property="departmentId"></result>
        <result column="perms"    property="perms"></result>
    </resultMap>

    <!-- 模糊查询语句 -->
    <select id="selectEmpLikeName" useCache="true" flushCache="false" resultMap="getEmpLikeNameResultMap">
        SELECT id,lastName,password,email,departmentId,perms FROM employee
        WHERE lastName like CONCAT(#{listName},'%')
    </select>

    <select id="getEmpByNameAndPassword" useCache="true" flushCache="false"
            resultType="com.example.druid.bean.Employee">
        SELECT id,lastName,password,email,departmentId,perms FROM employee
        WHERE lastName = #{lastName} and password = #{password}
    </select>

    <select id="getEmps" useCache="true" flushCache="false" resultType="com.example.druid.bean.Employee">
         SELECT id,lastName,email,departmentId,perms FROM employee
    </select>

    <!--
      flushCache="true"
      insert、delete、update的时候清空缓存
    -->
    <insert id="insertEmp" flushCache="true" parameterType="com.example.druid.bean.Employee" useGeneratedKeys="true"
            keyProperty="id">
        insert into employee (lastName,email,departmentId) values(#{lastName},#{email},#{departmentId})
    </insert>

</mapper>
